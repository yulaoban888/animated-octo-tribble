version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://user:password@db/warehouse_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./temp:/app/temp
      - ./backups:/app/backups
    restart: always

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=warehouse_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  alert_consumer:
    build: .
    command: python -m app.alerts.consumer
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
      - SMTP_HOST=smtp.warehouse.com
      - WEBHOOK_URL=https://webhook.warehouse.com/alerts

  api1:
    build: .
    environment:
      - DATABASE_URL=postgresql://user:password@db/warehouse_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

  api2:
    build: .
    environment:
      - DATABASE_URL=postgresql://user:password@db/warehouse_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

  api3:
    build: .
    environment:
      - DATABASE_URL=postgresql://user:password@db/warehouse_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

  db_slave1:
    image: postgres:13
    command: postgres -c 'hot_standby=on'
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - db_slave1_data:/var/lib/postgresql/data

  db_slave2:
    image: postgres:13
    command: postgres -c 'hot_standby=on'
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - db_slave2_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/load_balancer.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api1
      - api2
      - api3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  rabbitmq_data:
  db_slave1_data:
  db_slave2_data:
  elasticsearch_data: 